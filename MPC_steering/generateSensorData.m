function [allData, scenario, sensor] = generateSensorData()
%generateSensorData - Returns sensor detections
%    allData = generateSensorData returns sensor detections in a structure
%    with time for an internally defined scenario and sensor suite.
%
%    [allData, scenario, sensors] = generateSensorData optionally returns
%    the drivingScenario and detection generator objects.

% Generated by MATLAB(R) 9.9 (R2020b) and Automated Driving Toolbox 3.2 (R2020b).
% Generated on: 10-Oct-2021 17:19:36

% Create the drivingScenario object and ego car
[scenario, egoVehicle] = createDrivingScenario;

% Create all the sensors
sensor = createSensor(scenario);

allData = struct('Time', {}, 'ActorPoses', {}, 'ObjectDetections', {}, 'LaneDetections', {}, 'PointClouds', {});
running = true;
while running
    
    % Generate the target poses of all actors relative to the ego vehicle
    poses = targetPoses(egoVehicle);
    time  = scenario.SimulationTime;
    
    % Generate detections for the sensor
    laneDetections = [];
    ptClouds = [];
    [objectDetections, numObjects, isValidTime] = sensor(poses, time);
    objectDetections = objectDetections(1:numObjects);
    
    % Aggregate all detections into a structure for later use
    if isValidTime
        allData(end + 1) = struct( ...
            'Time',       scenario.SimulationTime, ...
            'ActorPoses', actorPoses(scenario), ...
            'ObjectDetections', {objectDetections}, ...
            'LaneDetections', {laneDetections}, ...
            'PointClouds',   {ptClouds}); %#ok<AGROW>
    end
    
    % Advance the scenario one time step and exit the loop if the scenario is complete
    running = advance(scenario);
end

% Restart the driving scenario to return the actors to their initial positions.
restart(scenario);

% Release the sensor object so it can be used again.
release(sensor);

%%%%%%%%%%%%%%%%%%%%
% Helper functions %
%%%%%%%%%%%%%%%%%%%%

% Units used in createSensors and createDrivingScenario
% Distance/Position - meters
% Speed             - meters/second
% Angles            - degrees
% RCS Pattern       - dBsm

function sensor = createSensor(scenario)
% createSensors Returns all sensor objects to generate detections

% Assign into each sensor the physical and radar profiles for all actors
profiles = actorProfiles(scenario);
sensor = visionDetectionGenerator('SensorIndex', 1, ...
    'SensorLocation', [1.9 0], ...
    'DetectorOutput', 'Objects only', ...
    'ActorProfiles', profiles);

function [scenario, egoVehicle] = createDrivingScenario
% createDrivingScenario Returns the drivingScenario defined in the Designer

% Construct a drivingScenario object.
scenario = drivingScenario;

% Add all road segments
roadCenters = [-0.03 0.07 0;
    0.04 -6.29 0;
    0.04 -11.83 0;
    0.6 -15.13 0;
    1.28 -19.37 0;
    2.34 -24.1 0;
    3.21 -28.28 0;
    4.4 -33.08 0;
    5.96 -38.56 0;
    8.76 -44.91 0;
    12.8 -52.5 0;
    18.6 -61.9 0;
    26.7 -71.1 0;
    32.5 -76.1 0;
    40.9 -80 0;
    50.8 -81.9 0;
    63.3 -84.3 0;
    76.8 -85.4 0;
    91.3 -81.6 0;
    98.9 -78.1 0;
    115.3 -70.6 0;
    127.5 -60.5 0;
    136.4 -53.7 0;
    152.6 -47.6 0;
    168.2 -43.5 0;
    181.1 -37.4 0;
    185.9 -27.9 0;
    192 -19.8 0;
    195.4 -9.6 0;
    199.4 6.7 0;
    198.8 14.2 0;
    196.7 23.7 0;
    192 29.8 0;
    185.2 39.9 0;
    178.4 50.1 0;
    171 56.2 0;
    162.1 63.7 0;
    156.7 71.8 0;
    153.3 82.7 0;
    150.6 102.3 0;
    149.9 119.3 0;
    149.9 130.1 0;
    144.5 148.5 0;
    139.1 155.2 0;
    128.9 175.6 0;
    122.1 183.1 0;
    110.6 195.3 0;
    100.4 221 0;
    89.6 225.1 0;
    78 229.2 0;
    69.9 229.2 0;
    63.8 222.4 0;
    54.3 213.6 0;
    50.2 208.1 0;
    40.7 204.8 0;
    25.8 211.5 0;
    15 225.8 0;
    4.8 229.9 0;
    -6.1 229.9 0;
    -16.9 229.9 0;
    -24.4 219.7 0;
    -24.4 208.8 0;
    -25.1 202 0;
    -25.1 189.8 0;
    -20.3 168.1 0;
    -15.6 160 0;
    -10.1 152.5 0;
    -6.8 146.4 0;
    0 135.6 0;
    3.4 115.9 0;
    2.7 107.8 0;
    -7.4 90.8 0;
    -8.1 79.3 0;
    -8.8 65 0;
    -7.4 58.2 0;
    -6.8 41.3 0;
    -5.4 29.7 0;
    -2.5 14.1 0;
    -0.5 7.5 0;
    0 3.9 0;
    -0.03 0.07 0];
road(scenario, roadCenters, 'Name', 'Road');

% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-0.0092750159379318 0.966627252449472 0.01], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car');
waypoints = [-0.0092750159379318 0.966627252449472 0.01;
    -0.0200000000000102 -5.67 0.01;
    -0.06 -7.63 0.01;
    -0.0200000000000102 -9.73 0.01;
    -0.0200000000000102 -12.73 0.01;
    0.49 -16.48 0.01;
    1.04 -18.89 0.01;
    1.59 -20.92 0.01;
    2.11000000000001 -22.5 0.01;
    3.08000000000001 -25.98 0.01;
    3.56 -28.59 0.01;
    4.13999999999999 -31.11 0.01;
    4.81999999999999 -34.2 0.01;
    5.69 -36.91 0.01;
    6.84999999999999 -40.78 0.01;
    7.91999999999999 -43.2 0.01;
    8.78999999999999 -45.04 0.01;
    9.66 -46.68 0.01;
    10.61 -48.44 0.01;
    11.81 -50.8 0.01;
    12.69 -52.22 0.01;
    13.95 -54.46 0.01;
    15.65 -57.31 0.01;
    16.96 -59.61 0.01;
    18.28 -61.69 0.01;
    19.37 -63.28 0.01;
    21.45 -65.74 0.01;
    23.37 -67.71 0.01;
    25.01 -69.36 0.01;
    26.76 -70.94 0.01;
    28.35 -72.37 0.01;
    30.38 -74.18 0.01;
    32.07 -75.71 0.01;
    33.5 -76.91 0.01;
    35.52 -77.95 0.01;
    38.7 -79.1 0.01;
    42 -80.14 0;
    46.4 -81.14 0;
    52.1 -82.44 0;
    57 -83.64 0;
    63.4 -84.84 0;
    68.4 -85.44 0;
    73.09 -85.73 0.01;
    76.73 -85.77 0.01;
    80.4 -85.44 0;
    82.8 -84.94 0;
    85.4 -83.84 0;
    89.4 -82.04 0;
    92.9 -80.74 0;
    96.3 -79.24 0;
    101.4 -77.04 0;
    105.2 -75.84 0;
    109.2 -74.24 0;
    113.6 -72.04 0;
    117.7 -69.34 0;
    120.7 -67.04 0;
    124 -63.54 0;
    127.8 -59.84 0;
    131.5 -56.94 0;
    136 -54.24 0;
    140.4 -51.94 0;
    147.5 -49.14 0;
    154.8 -46.84 0;
    162.5 -45.04 0;
    171.4 -42.94 0;
    178.8 -40.64 0;
    181.89 -37.42 0.01;
    185.06 -30.85 0.01;
    188.9 -25.24 0;
    192 -19.94 0;
    194.4 -15.64 0;
    196.1 -9.94 0;
    197.7 -4.84 0;
    199.1 0.859999999999999 0;
    199.9 7.06 0;
    199.62 11.89 0.01;
    199.32 14.76 0.01;
    199.02 18.08 0.01;
    198.64 20.95 0.01;
    197.6 23.26 0;
    196.5 25.36 0;
    195.4 26.79 0.01;
    193.58 28.79 0.01;
    191.9 30.98 0.01;
    189.8 33.56 0;
    186.73 37.47 0.01;
    184.4 40.76 0;
    182.7 43.76 0;
    181.5 46.36 0;
    178.93 49.57 0.01;
    176 52.46 0;
    172.2 55.16 0;
    167.5 58.76 0;
    162.2 63.56 0;
    159.5 67.06 0;
    157 71.06 0;
    155.2 75.96 0;
    153.7 82.06 0;
    152.72 87.29 0.01;
    151.8 91.96 0;
    151.19 97.26 0.01;
    150.9 102.66 0;
    150.61 107.29 0.01;
    150.49 111.96 0.01;
    150.4 116.46 0.01;
    150.4 122.86 0;
    150.4 127.96 0;
    150.1 133.86 0;
    148.4 141.16 0;
    146.69 144.7 0.01;
    143.9 148.86 0;
    139.7 154.06 0;
    135.45 161.99 0.01;
    132.71 169.22 0.01;
    129.51 174.87 0.01;
    125.18 179.96 0.01;
    121.49 183.44 0.01;
    117.1 187.36 0;
    113.26 191.74 0.01;
    110.9 195.76 0;
    108.8 201.86 0;
    107.4 206.96 0;
    106 212.06 0;
    104.76 216.22 0.01;
    102.53 219.3 0.01;
    98.69 221.79 0.01;
    95.41 223.4 0.01;
    88.93 225.63 0.01;
    84.46 227.16 0.01;
    79.85 228.76 0.01;
    77.32 229.58 0.01;
    74.97 230.02 0.01;
    72.29 230.18 0.01;
    69.77 229.49 0.01;
    68.12 228.3 0.01;
    66.2 225.26 0;
    64.2 222.96 0;
    61.5 220.46 0;
    59.2 218.26 0;
    55.9 215.76 0;
    54.2 213.86 0;
    53.3 212.36 0;
    50.99 208.84 0.01;
    48.8 206.86 0;
    44.6 205.16 0;
    39.9 204.46 0;
    34.7 205.66 0;
    30 207.76 0;
    26.54 210.61 0.01;
    23.76 213.54 0.01;
    21.68 216.4 0.01;
    20.1 218.96 0;
    17.6 222.86 0;
    14.81 225.97 0.01;
    11.3 228.06 0;
    6 229.26 0;
    1.69 229.83 0.01;
    -2.4 230.06 0.01;
    -7.41 230.13 0.01;
    -11.5 229.9 0.01;
    -16.44 229.13 0.01;
    -19.9 227.76 0;
    -23.6 223.66 0;
    -25.3 217.36 0;
    -25.23 212.39 0.01;
    -25 208.84 0.01;
    -25.38 204.91 0.01;
    -25.86 199.13 0.01;
    -25.84 193.56 0.01;
    -25.54 187.22 0.01;
    -24.11 178.53 0.01;
    -22.21 171.89 0.01;
    -19.4 165.36 0;
    -16.2 159.86 0;
    -12.9 155.66 0;
    -9.90000000000001 151.46 0;
    -7.09999999999999 146.36 0;
    -4.09999999999999 141.66 0;
    -2 138.66 0;
    -0.199999999999989 135.96 0;
    2 130.7 0;
    2.9 126 0;
    3.7 119.7 0;
    4 115.3 0;
    3.69999999999999 110.16 0;
    2.90000000000001 107.86 0;
    1 104.26 0;
    -2.44 99.31 0.01;
    -5.16 95.01 0.01;
    -6.80000000000001 92.06 0;
    -8.30000000000001 86.96 0;
    -8.30000000000001 83.26 0;
    -9 75.36 0;
    -9.19999999999999 71.76 0;
    -9.16 68.06 0.01;
    -8.94 64.74 0.01;
    -8.5 62.06 0;
    -8.09999999999999 59.56 0;
    -7.5 54.46 0;
    -7.19999999999999 50.36 0;
    -7.05 44.95 0.01;
    -6.75 38 0.01;
    -6.07 32.04 0.01;
    -5.30000000000001 26.86 0;
    -4.80000000000001 24.06 0;
    -3.5 18.46 0;
    -2.40000000000001 13.96 0;
    -1.19999999999999 9.46 0;
    -0.199999999999989 4.86 0;
    0.05 0.09 0.01];
speed = [0.5;6;8.5;11.2;12.2;13.1;14.05;14.5;14.85;14.99;15.1;15.21;15.35;15.405;15.65;15.74;15.92;15.95;16;16;16;16;16;16;16.2;16.5;16.4;16.3;16.22;16.2;16.2;16.15;16.1;16.1;16.05;16.02;16;15.8;15.8;15.63;15.55;15.5;15.5;15.8;16.2;16.4;16.6;16.85;16.5;16.35;16.3;16.3;16.3;16.2;16;16;16.2;16.4;16.8;17.2;17.5;18.1;18.5;18.85;19;18.2;17.5;17.1;17;17.3;17.55;17.95;18.35;18.85;19.25;19.75;20.25;21;21.52;22.15;22.85;23.25;24.05;24.75;25.12;25.75;26;25.2;24.6;23.05;23;23;23;23;23;23;23;23.5;23.95;24.45;24.9;25.35;26;26.2;26.85;27.4;27.2;26.5;26.15;25.75;25.2;25;24.85;24.5;24.2;24.2;24.25;24.3;24.3;24.2;24.05;23.7;22.95;22.5;22;22;22;22;21.7;21.35;20.2;19.1;18.02;17.25;16.4;15.75;15.5;15.5;15.5;15.5;15.5;15.5;15.25;15.15;15;14.85;14.6;14.35;14.3;14.3;14.2;14.2;14.2;14.2;14.2;14.2;14.6;14.8;15;15;14.7;14.2;13.9;13.5;13.2;13.2;13.2;13.5;13.9;14.4;15.1;15.89;16.3;17.1;17.95;18.45;18.76;19.25;19.78;20.35;21.05;21.85;22.35;23.1;22.15;21.35;20.4;19.45;18.75;18.1;17.45;16.84;16.5;16.5;16.5;16.95;17.35;17.85;18.23;18.45;18.76;19.05;19.15;19.2;19.2;19.1;19;18.8;18.6;18.5];
waittime = [0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0];
trajectory(egoVehicle, waypoints, speed, waittime);

